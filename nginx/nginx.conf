worker_processes auto;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}


http {
    include mime.types;
    types {
        application/manifest+json  webmanifest;
    }
    default_type application/octet-stream;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
        }

    server {
            listen 80 default_server;
            listen [::]:80 default_server;
            server_name localhost;
            # rootをトップに持って行つと成功するがlocationに入れると失敗する
            root /data/public;

            # websocket をreverse proxyで使うための設定
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # add_header Access-Control-Allow-Origin "$http_origin";
            # add_header Access-Control-Allow-Origin "*"; // app.php側でCORSは処理しているのでコメントアウト
            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-XSS-Protection "1; mode=block";
            add_header X-Content-Type-Options "nosniff";

            index index.php;

            charset utf-8;


            location = /favicon.ico { access_log off; log_not_found off; }
            location = /robots.txt  { access_log off; log_not_found off; }
            
            error_page 404 /index.php;
            
            # フロントエンドを追加せずに，これだけだとAPIとして機能する
            location /api/ {
                try_files $uri $uri/ /index.php?$query_string;
                access_log /etc/nginx/access.log;
                error_log /etc/nginx/error.log;
            }

            location ~ \.php$ {
                access_log /etc/nginx/access.log;
                error_log /etc/nginx/error.log;
                fastcgi_pass backend:9000;
                fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
                include fastcgi_params;
            }

            
            # serve static frontend first  
            location / { 
                root /var/www;
                index  index.html index.htm;
                try_files $uri $uri/ /index.html;
            }

            location ~ /\.(?!well-known).* {
                deny all;
            }

            error_page   500 502 503 504  /50x.html;
            location = /50x.html {
                root   /usr/share/nginx/html;
            }
        }
}